{"component":{"kind":"component","name":"ignite-messaging","title":"Ignite Messaging","description":"Send and receive messages from an Ignite topic.","deprecated":false,"firstVersion":"2.17.0","label":"messaging","javaType":"org.apache.camel.component.ignite.messaging.IgniteMessagingComponent","supportLevel":"Stable","groupId":"org.apache.camel","artifactId":"camel-ignite","version":"3.17.0","scheme":"ignite-messaging","extendsScheme":"","syntax":"ignite-messaging:topic","async":false,"api":false,"consumerOnly":false,"producerOnly":false,"lenientProperties":false},"headers":{"CamelIgniteMessagingTopic":{"kind":"header","displayName":"","group":"common","label":"","required":false,"javaType":"String","deprecated":false,"deprecationNote":"","autowired":false,"secret":false,"description":"(producer) Allows you to dynamically change the topic to send messages to. (consumer) It also carries the topic on which a message was received.","constantName":"org.apache.camel.component.ignite.IgniteConstants#IGNITE_MESSAGING_TOPIC"},"CamelIgniteMessagingUUID":{"kind":"header","displayName":"","group":"consumer","label":"consumer","required":false,"javaType":"java.util.UUID","deprecated":false,"deprecationNote":"","autowired":false,"secret":false,"description":"This header is filled in with the UUID of the subscription when a message arrives.","constantName":"org.apache.camel.component.ignite.IgniteConstants#IGNITE_MESSAGING_UUID"}},"properties":{"topic":{"kind":"path","displayName":"Topic","group":"common","label":"","required":true,"type":"string","javaType":"java.lang.String","deprecated":false,"deprecationNote":"","autowired":false,"secret":false,"description":"The topic name."},"propagateIncomingBodyIfNoReturnValue":{"kind":"parameter","displayName":"Propagate Incoming Body If No Return Value","group":"common","label":"","required":false,"type":"boolean","javaType":"boolean","deprecated":false,"autowired":false,"secret":false,"defaultValue":true,"description":"Sets whether to propagate the incoming body if the return type of the underlying Ignite operation is void."},"treatCollectionsAsCacheObjects":{"kind":"parameter","displayName":"Treat Collections As Cache Objects","group":"common","label":"","required":false,"type":"boolean","javaType":"boolean","deprecated":false,"autowired":false,"secret":false,"defaultValue":false,"description":"Sets whether to treat Collections as cache objects or as Collections of items to insert/update/compute, etc."},"bridgeErrorHandler":{"kind":"parameter","displayName":"Bridge Error Handler","group":"consumer","label":"consumer","required":false,"type":"boolean","javaType":"boolean","deprecated":false,"autowired":false,"secret":false,"defaultValue":false,"description":"Allows for bridging the consumer to the Camel routing Error Handler, which mean any exceptions occurred while the consumer is trying to pickup incoming messages, or the likes, will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions, that will be logged at WARN or ERROR level and ignored."},"exceptionHandler":{"kind":"parameter","displayName":"Exception Handler","group":"consumer (advanced)","label":"consumer,advanced","required":false,"type":"object","javaType":"org.apache.camel.spi.ExceptionHandler","optionalPrefix":"consumer.","deprecated":false,"autowired":false,"secret":false,"description":"To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this option is not in use. By default the consumer will deal with exceptions, that will be logged at WARN or ERROR level and ignored."},"exchangePattern":{"kind":"parameter","displayName":"Exchange Pattern","group":"consumer (advanced)","label":"consumer,advanced","required":false,"type":"object","javaType":"org.apache.camel.ExchangePattern","enum":["InOnly","InOut","InOptionalOut"],"deprecated":false,"autowired":false,"secret":false,"description":"Sets the exchange pattern when the consumer creates an exchange."},"clusterGroupExpression":{"kind":"parameter","displayName":"Cluster Group Expression","group":"producer","label":"consumer,producer","required":false,"type":"object","javaType":"org.apache.camel.component.ignite.ClusterGroupExpression","deprecated":false,"autowired":false,"secret":false,"description":"The cluster group expression."},"lazyStartProducer":{"kind":"parameter","displayName":"Lazy Start Producer","group":"producer","label":"producer","required":false,"type":"boolean","javaType":"boolean","deprecated":false,"autowired":false,"secret":false,"defaultValue":false,"description":"Whether the producer should be started lazy (on the first message). By starting lazy you can use this to allow CamelContext and routes to startup in situations where a producer may otherwise fail during starting and cause the route to fail being started. By deferring this startup to be lazy then the startup failure can be handled during routing messages via Camel's routing error handlers. Beware that when the first message is processed then creating and starting the producer may take a little time and prolong the total processing time of the processing."},"sendMode":{"kind":"parameter","displayName":"Send Mode","group":"producer","label":"producer","required":false,"type":"object","javaType":"org.apache.camel.component.ignite.messaging.IgniteMessagingSendMode","enum":["ORDERED","UNORDERED"],"deprecated":false,"autowired":false,"secret":false,"defaultValue":"UNORDERED","description":"The send mode to use. Possible values: UNORDERED, ORDERED."},"timeout":{"kind":"parameter","displayName":"Timeout","group":"producer","label":"producer","required":false,"type":"integer","javaType":"java.lang.Long","deprecated":false,"autowired":false,"secret":false,"description":"The timeout for the send operation when using ordered messages."}}}