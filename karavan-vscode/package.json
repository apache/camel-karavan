{
  "name": "karavan",
  "publisher": "camel-karavan",
  "displayName": "Karavan",
  "icon": "icons/karavan.png",
  "description": "Apache Camel Mastering Tool",
  "version": "0.0.15",
  "license": "Apache-2.0",
  "preview": true,
  "bugs": {
    "url": "https://github.com/apache/camel-karavan/issues"
  },
  "author": {
    "name": "Marat Gubaidullin",
    "email": "marat.gubaidullin@gmail.com"
  },
  "maintainers": [
    {
      "name": "Marat Gubaidullin",
      "email": "marat.gubaidullin@gmail.com"
    }
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/apache/camel-karavan/tree/main/karavan-vscode"
  },
  "engines": {
    "vscode": "^1.56.0"
  },
  "categories": [
    "Other"
  ],
  "homepage": "https://github.com/apache/camel-karavan/tree/main/karavan-vscode",
  "keywords": [
    "Camel",
    "Camel K",
    "Camel-K",
    "camelk",
    "kamel",
    "Tool",
    "Integration",
    "Camel Yaml"
  ],
  "activationEvents": [
    "onCommand:karavan.create-crd",
    "onCommand:karavan.create-yaml",
    "onCommand:karavan.open",
    "onCommand:karavan.open-yaml",
    "onCommand:karavan.jbang-run",
    "onView:integrations"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "configuration": {
      "title": "Karavan",
      "properties": {
        "camel.version": {
          "type": "string",
          "default": "3.16.0",
          "description": "Camel version"
        },
        "camel.maxMessages": {
          "type": "integer",
          "default": 10,
          "description": "Maximum number of messages to process before stopping"
        },
        "camel.loggingLevel": {
          "type": "string",
          "default": "info",
          "enum": [
            "info",
            "error",
            "debug",
            "trace"
          ],
          "description": "Logging level"
        },
        "camel.reload": {
          "type": "boolean",
          "default": "true",
          "description": "Reload routes on change"
        },
        "camel.health": {
          "type": "boolean",
          "default": false,
          "description": "Enable health-check when run in Jbang"
        },
        "camel.messageTracing": {
          "type": "boolean",
          "default": false,
          "description": "Logging message details during routing"
        },
        "Karavan.kameletsPath": {
          "type": "string",
          "default": "",
          "description": "Custom Kamelets Path"
        },
        "Karavan.showStartHelp": {
          "type": "boolean",
          "default": true,
          "description": "Show Karavan help tour"
        }
      }
    },
    "commands": [
      {
        "command": "karavan.create-crd",
        "title": "Karavan: Create CRD",
        "icon": {
          "light": "./icons/light/add.svg",
          "dark": "./icons/dark/add.svg"
        }
      },
      {
        "command": "karavan.create-yaml",
        "title": "Karavan: Create YAML"
      },
      {
        "command": "karavan.open",
        "title": "Karavan: Open",
        "icon": {
          "light": "./icons/karavan.svg",
          "dark": "./icons/karavan.svg"
        }
      },
      {
        "command": "karavan.open-yaml",
        "title": "Karavan: Open YAML"
      },
      {
        "command": "karavan.jbang-run",
        "title": "Karavan: JBang Run",
        "icon": {
          "light": "./icons/light/run.svg",
          "dark": "./icons/dark/run.svg"
        }
      },
      {
        "command": "integrations.refresh",
        "title": "Refresh",
        "icon": {
          "light": "icons/light/refresh.svg",
          "dark": "icons/dark/refresh.svg"
        }
      },
      {
        "command": "kamelets.refresh",
        "title": "Refresh",
        "icon": {
          "light": "icons/light/refresh.svg",
          "dark": "icons/dark/refresh.svg"
        }
      },
      {
        "command": "components.refresh",
        "title": "Refresh",
        "icon": {
          "light": "icons/light/refresh.svg",
          "dark": "icons/dark/refresh.svg"
        }
      },
      {
        "command": "eip.refresh",
        "title": "Refresh",
        "icon": {
          "light": "icons/light/refresh.svg",
          "dark": "icons/dark/refresh.svg"
        }
      }
    ],
    "menus": {
      "explorer/context": [
        {
          "command": "karavan.create-crd",
          "when": "explorerResourceIsFolder || explorerResourceIsRoot"
        },
        {
          "command": "karavan.create-yaml",
          "when": "explorerResourceIsFolder || explorerResourceIsRoot"
        },
        {
          "command": "karavan.open",
          "when": "resourceExtname == .yaml"
        },
        {
          "command": "karavan.jbang-run",
          "when": "resourceExtname == .yaml"
        }
      ],
      "editor/title": [
        {
          "command": "karavan.open",
          "when": "resourceExtname == .yaml",
          "group": "navigation"
        },
        {
          "command": "karavan.jbang-run",
          "when": "resourceExtname == .yaml || karavan:loaded",
          "group": "navigation"
        }
      ],
      "view/title": [
        {
          "command": "integrations.refresh",
          "when": "view == integrations",
          "group": "navigation"
        },
        {
          "command": "karavan.create-crd",
          "when": "view == integrations",
          "group": "navigation"
        },
        {
          "command": "kamelets.refresh",
          "when": "view == kamelets",
          "group": "navigation"
        },
        {
          "command": "components.refresh",
          "when": "view == components",
          "group": "navigation"
        },
        {
          "command": "eip.refresh",
          "when": "view == eip",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "karavan.open",
          "when": "view == integrations && viewItem == 'integration'",
          "group": "navigation_1_open@1"
        },
        {
          "command": "karavan.open-yaml",
          "when": "view == integrations && viewItem == 'integration'",
          "group": "navigation_1_open@2"
        },
        {
          "command": "karavan.jbang-run",
          "when": "view == integrations && viewItem == 'integration'",
          "group": "navigation_2_run@1"
        }
      ]
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "karavanView",
          "title": "Karavan",
          "icon": "icons/karavan-mono-24x24.svg"
        }
      ]
    },
    "views": {
      "karavanView": [
        {
          "id": "integrations",
          "name": "Integrations"
        },
        {
          "id": "eip",
          "name": "Enterprise Integration Patterns",
          "visibility": "collapsed"
        },
        {
          "id": "kamelets",
          "name": "Kamelets",
          "visibility": "collapsed"
        },
        {
          "id": "components",
          "name": "Components",
          "visibility": "collapsed"
        }
      ]
    },
    "viewsWelcome": [
      {
        "view": "integrations",
        "contents": "No integrations found.\n [Create Integration CRD](command:karavan.create-crd)"
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "cp -r ../karavan-designer/src/designer webview && npm run package",
    "compile": "cp -r ../karavan-designer/src/designer webview && cross-env NODE_ENV=development webpack --progress",
    "watch": "cp -r ../karavan-designer/src/designer webview && cross-env NODE_ENV=development webpack --progress --watch",
    "package": "cp -r ../karavan-designer/src/designer webview  && cross-env NODE_ENV=production webpack --progress",
    "test-compile": "tsc -p ./",
    "test-watch": "tsc -watch -p ./",
    "pretest": "cp -r ../karavan-designer/src/designer webview && npm run test-compile && npm run lint",
    "lint": "eslint src webview --ext .ts,.tsx",
    "lint:fix": "eslint --fix src webview --ext .ts,.tsx",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@svgr/webpack": "6.2.1",
    "@types/glob": "^7.1.3",
    "@types/mocha": "^8.0.4",
    "@types/node": "17.0.14",
    "@types/react": "^17.0.5",
    "@types/react-dom": "^17.0.4",
    "@types/vscode": "^1.56.0",
    "@typescript-eslint/eslint-plugin": "^4.14.1",
    "@typescript-eslint/parser": "^4.14.1",
    "copy-webpack-plugin": "^9.0.1",
    "cross-env": "^7.0.3",
    "css-loader": "^5.2.4",
    "eslint": "^7.19.0",
    "eslint-config-prettier": "^8.3.0",
    "eslint-plugin-prettier": "^3.4.0",
    "eslint-plugin-react": "^7.23.2",
    "file-loader": "^6.2.0",
    "mini-css-extract-plugin": "^1.6.0",
    "mocha": "^8.2.1",
    "prettier": "2.3.0",
    "static-site-generator-webpack-plugin": "^3.4.2",
    "style-loader": "^2.0.0",
    "ts-loader": "^8.0.14",
    "typescript": "^4.1.3",
    "url-loader": "^4.1.1",
    "vscode-test": "^1.5.0",
    "webpack": "^5.19.0",
    "webpack-cli": "^4.4.0"
  },
  "dependencies": {
    "@patternfly/patternfly": "4.171.1",
    "@patternfly/react-core": "4.192.7",
    "@reactour/tour": "^2.10.2",
    "@types/js-yaml": "4.0.5",
    "@types/uuid": "8.3.4",
    "karavan-core": "file:../karavan-core",
    "path-browserify": "^1.0.1",
    "react": "^17.0.2",
    "react-dom": "^17.0.2",
    "rxjs": "7.5.2",
    "uuid": "8.3.2"
  }
}
