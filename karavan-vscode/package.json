{
  "name": "karavan",
  "publisher": "camel-karavan",
  "displayName": "Karavan",
  "icon": "icons/karavan.png",
  "description": "Integration Toolkit for Apache Camel",
  "version": "3.18.5",
  "license": "Apache-2.0",
  "preview": true,
  "bugs": {
    "url": "https://github.com/apache/camel-karavan/issues"
  },
  "author": {
    "name": "Marat Gubaidullin",
    "email": "marat.gubaidullin@gmail.com"
  },
  "maintainers": [
    {
      "name": "Marat Gubaidullin",
      "email": "marat.gubaidullin@gmail.com"
    }
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/apache/camel-karavan/tree/main/karavan-vscode"
  },
  "engines": {
    "vscode": "^1.56.0"
  },
  "categories": [
    "Other"
  ],
  "homepage": "https://github.com/apache/camel-karavan/tree/main/karavan-vscode",
  "keywords": [
    "Camel",
    "Tool",
    "Integration",
    "Camel Yaml",
    "Jbang"
  ],
  "activationEvents": [
    "onCommand:karavan.create-crd",
    "onCommand:karavan.create-yaml",
    "onCommand:karavan.create-application",
    "onCommand:karavan.deploy",
    "onCommand:karavan.open",
    "onCommand:karavan.open-file",
    "onCommand:karavan.jbang-run-file",
    "onCommand:karavan.jbang-run-project",
    "onCommand:karavan.jbang-export",
    "onCommand:karavan.generate-rest",
    "onCommand:karavan.download-image",
    "onCommand:karavan.openKamelets",
    "onCommand:karavan.openComponents",
    "onCommand:karavan.openEip",
    "onCommand:karavan.reportIssue",
    "onView:integrations"
  ],
  "main": "./dist/extension.js",
  "browser": "./dist/extension.js",
  "contributes": {
    "configuration": {
      "title": "Karavan",
      "properties": {
        "camel.version": {
          "type": "string",
          "default": "3.18.3",
          "description": "Camel version",
          "scope": "machine",
          "order": 10
        },
        "camel.runtimes": {
          "type": "string",
          "default": "quarkus",
          "enum": [
            "quarkus",
            "spring-boot",
            "camel-main"
          ],
          "description": "Runtimes",
          "scope": "machine",
          "order": 20
        },
        "camel.deployTarget": {
          "type": "string",
          "default": "openshift",
          "enum": [
            "openshift",
            "kubernetes",
            "none"
          ],
          "description": "Deploy Target",
          "scope": "machine",
          "order": 22
        },
        "camel.quarkus-version": {
          "type": "string",
          "default": "2.13.3.Final",
          "description": "Camel-quarkus version",
          "scope": "machine",
          "order": 21
        },
        "camel.maxMessages": {
          "type": "integer",
          "default": 0,
          "description": "Maximum number of messages to process before stopping",
          "scope": "machine",
          "order": 30
        },
        "camel.loggingLevel": {
          "type": "string",
          "default": "info",
          "enum": [
            "info",
            "error",
            "debug",
            "trace"
          ],
          "description": "Logging level",
          "scope": "machine",
          "order": 40
        },
        "camel.dev": {
          "type": "boolean",
          "default": "false",
          "description": "Run in developer mode (including reload routes on change)",
          "scope": "machine",
          "order": 50
        },
        "camel.messageTracing": {
          "type": "boolean",
          "default": false,
          "description": "Logging message details during routing",
          "scope": "machine",
          "order": 60
        },
        "Karavan.kameletsPath": {
          "type": "string",
          "default": "",
          "description": "Custom Kamelets Path",
          "scope": "machine",
          "order": 65
        },
        "Karavan.applicationProperties": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          },
          "default": [
            "camel.jbang.project-id=$NAME",
            "camel.jbang.project-name=$NAME",
            "camel.jbang.project-description=$NAME",
            "camel.jbang.gav=$GAV",
            "camel.jbang.runtime=$RUNTIME",
            "camel.jbang.dependencies=mvn:io.quarkus:quarkus-container-image-jib,camel:microprofile-health,mvn:io.quarkus:quarkus-openshift",
            "camel.health.enabled=true",
            "camel.health.exposure-level=full"
          ],
          "description": "Default application.properties template",
          "scope": "machine",
          "order": 90
        },
        "Karavan.quarkusApplicationProperties": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          },
          "default": [
            "camel.jbang.quarkusVersion=$RUNTIME_VERSION"
          ],
          "description": "Default application.properties template for Quarkus Runtime",
          "scope": "machine",
          "order": 95
        },
        "Karavan.imageBuildProperties": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          },
          "default": [
            "quarkus.container-image.group=${NAMESPACE}",
            "quarkus.container-image.name=$NAME",
            "quarkus.container-image.builder=jib",
            "quarkus.container-image.registry=${IMAGE_REGISTRY}",
            "quarkus.container-image.insecure=true",
            "quarkus.container-image.username=${KUBERNETES_USER}",
            "quarkus.container-image.password=${KUBERNETES_TOKEN}",
            "quarkus.container-image.tag=${DATE}"
          ],
          "description": "Default application.properties template for image build",
          "scope": "machine",
          "order": 96
        },
        "Karavan.openshiftProperties": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          },
          "default": [
            "quarkus.kubernetes-client.trust-certs=true",
            "quarkus.kubernetes-client.master-url=${KUBERNETES_SERVER}",
            "quarkus.kubernetes-client.namespace=${NAMESPACE}",
            "quarkus.kubernetes-client.token=${KUBERNETES_TOKEN}",
            "quarkus.openshift.labels.\"app.openshift.io/runtime\"=camel",
            "quarkus.openshift.deployment-kind=Deployment",
            "quarkus.openshift.add-version-to-label-selectors=false",
            "quarkus.openshift.route.expose=false",
            "quarkus.openshift.part-of=$NAME",
            "quarkus.openshift.replicas=1"
          ],
          "description": "Default application.properties template for Openshift",
          "scope": "machine",
          "order": 97
        }
      }
    },
    "commands": [
      {
        "command": "karavan.create-crd",
        "title": "Karavan: Create CRD",
        "icon": "$(add)"
      },
      {
        "command": "karavan.create-yaml",
        "title": "Karavan: Create Integration"
      },
      {
        "command": "karavan.create-application",
        "title": "Karavan: Create Application",
        "icon": "$(symbol-property)"
      },
      {
        "command": "karavan.open",
        "title": "Karavan: Open",
        "icon": {
          "light": "./icons/karavan.svg",
          "dark": "./icons/karavan.svg"
        }
      },
      {
        "command": "karavan.open-file",
        "title": "Karavan: Open editor"
      },
      {
        "command": "karavan.jbang-run-file",
        "title": "Karavan: Run File",
        "icon": "$(run)"
      },
      {
        "command": "karavan.jbang-run-project",
        "title": "Karavan: Run Project",
        "icon": "$(run)"
      },
      {
        "command": "karavan.jbang-export",
        "title": "Karavan: Export",
        "icon": "$(export)"
      },
      {
        "command": "karavan.deploy",
        "title": "Karavan: Deploy",
        "icon": "$(layers)"
      },
      {
        "command": "karavan.generate-rest",
        "title": "Karavan: Generate REST API"
      },
      {
        "command": "karavan.download-image",
        "title": "Download image",
        "icon": "$(device-camera)"
      },
      {
        "command": "integrations.refresh",
        "title": "Refresh",
        "icon": "$(refresh)"
      },
      {
        "command": "openapi.refresh",
        "title": "Refresh",
        "icon": "$(refresh)"
      },
      {
        "command": "karavan.openKamelets",
        "title": "Open Kamelet Catalog"
      },
      {
        "command": "karavan.openComponents",
        "title": "Open Component Catalog"
      },
      {
        "command": "karavan.openEip",
        "title": "Open EIP"
      },
      {
        "command": "karavan.reportIssue",
        "title": "Report Issue"
      }
    ],
    "menus": {
      "explorer/context": [
        {
          "command": "karavan.create-crd",
          "when": "explorerResourceIsFolder || explorerResourceIsRoot",
          "group": "karavan@1"
        },
        {
          "command": "karavan.create-yaml",
          "when": "explorerResourceIsFolder || explorerResourceIsRoot",
          "group": "karavan@2"
        },
        {
          "command": "karavan.create-application",
          "when": "explorerResourceIsFolder || explorerResourceIsRoot",
          "group": "karavan@3"
        },
        {
          "command": "karavan.open",
          "when": "resourceExtname == .yaml",
          "group": "karavan@4"
        },
        {
          "command": "karavan.jbang-run-file",
          "when": "resourceExtname == .yaml",
          "group": "karavan@5"
        },
        {
          "command": "karavan.jbang-run-project",
          "when": "explorerResourceIsFolder || explorerResourceIsRoot",
          "group": "karavan@6"
        },
        {
          "command": "karavan.jbang-export",
          "when": "explorerResourceIsFolder || explorerResourceIsRoot",
          "group": "karavan@7"
        },
        {
          "command": "karavan.deploy",
          "when": "explorerResourceIsFolder || explorerResourceIsRoot",
          "group": "karavan@8"
        },
        {
          "command": "karavan.generate-rest",
          "when": "resourceExtname == .json || resourceExtname == .yaml",
          "group": "karavan@9"
        }
      ],
      "editor/title": [
        {
          "command": "karavan.open",
          "when": "resourceExtname == .yaml",
          "group": "navigation@1"
        },
        {
          "command": "karavan.jbang-run-file",
          "when": "resourceExtname == .yaml || karavan:loaded",
          "group": "navigation@2"
        },
        {
          "command": "karavan.download-image",
          "when": "karavan:loaded",
          "group": "navigation@3"
        }
      ],
      "view/title": [
        {
          "command": "karavan.jbang-run-project",
          "when": "view == integrations",
          "group": "navigation@1"
        },
        {
          "command": "karavan.deploy",
          "when": "view == integrations",
          "group": "navigation@2"
        },
        {
          "command": "karavan.jbang-export",
          "when": "view == integrations",
          "group": "navigation@3"
        },
        {
          "command": "karavan.create-crd",
          "when": "view == integrations",
          "group": "navigation@4"
        },
        {
          "command": "integrations.refresh",
          "when": "view == integrations",
          "group": "navigation@5"
        },
        {
          "command": "openapi.refresh",
          "when": "view == openapi",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "karavan.open",
          "when": "view == integrations && viewItem == 'integration'",
          "group": "navigation_1_open@1"
        },
        {
          "command": "karavan.open-file",
          "when": "view == integrations && viewItem == 'integration'",
          "group": "navigation_1_open@2"
        },
        {
          "command": "karavan.jbang-run-file",
          "when": "view == integrations && viewItem == 'integration'",
          "group": "navigation_2_run@1"
        },
        {
          "command": "karavan.generate-rest",
          "when": "view == openapi && viewItem == 'openapi'",
          "group": "navigation_1_generate@1"
        }
      ]
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "karavanView",
          "title": "Karavan",
          "icon": "icons/karavan-mono-24x24.svg"
        }
      ]
    },
    "views": {
      "karavanView": [
        {
          "id": "integrations",
          "name": "Integrations",
          "visibility": "visible"
        },
        {
          "id": "openapi",
          "name": "Open API",
          "visibility": "visible"
        },
        {
          "id": "help",
          "name": "Help & Feedback",
          "visibility": "visible"
        }
      ]
    },
    "viewsWelcome": [
      {
        "view": "integrations",
        "contents": "No integrations found.\n [Create Integration CRD](command:karavan.create-crd)"
      }
    ]
  },
  "scripts": {
    "copy-core": "cp -r ../karavan-core/src/core webview",
    "copy-designer": "cp -r ../karavan-designer/src/designer webview && cp -r ../karavan-designer/src/kamelets webview && cp -r ../karavan-designer/src/components webview && cp -r ../karavan-designer/src/eip webview",
    "replace-import": "run-script-os",
    "replace-import:darwin": "find webview -type f -name '*.ts*' -exec sed -i '' 's!karavan-core/lib!core!g' {} +",
    "replace-import:linux": "find webview -type f -name '*.ts*' -exec sed -i 's!karavan-core/lib!core!g' {} +",
    "copy-karavan": "npm run copy-core && npm run copy-designer && npm run replace-import",
    "vscode:prepublish": "npm run copy-karavan && npm run package",
    "compile": "npm run copy-karavan && cross-env NODE_ENV=development webpack --progress --stats-error-details",
    "watch": "npm run copy-karavan && cross-env NODE_ENV=development webpack --progress --watch",
    "package": "npm run copy-karavan  && cross-env NODE_ENV=production webpack --progress",
    "test-compile": "tsc -p ./",
    "test-watch": "tsc -watch -p ./",
    "pretest": "npm run copy-karavan && npm run test-compile && npm run lint",
    "lint": "eslint src webview --ext .ts,.tsx",
    "lint:fix": "eslint --fix src webview --ext .ts,.tsx",
    "test": "node ./out/test/runTest.js",
    "open-in-browser": "vscode-test-web --extensionDevelopmentPath=. ../karavan-demo/hello-world/"
  },
  "devDependencies": {
    "@svgr/webpack": "6.2.1",
    "@types/chai": "^4.3.0",
    "@types/glob": "^7.1.3",
    "@types/mocha": "^8.0.4",
    "@types/node": "17.0.14",
    "@types/react": "^17.0.5",
    "@types/react-dom": "^17.0.4",
    "@types/vscode": "^1.56.0",
    "@typescript-eslint/eslint-plugin": "^4.14.1",
    "@typescript-eslint/parser": "^4.14.1",
    "@vscode/test-web": "0.0.30",
    "chai": "^4.3.4",
    "copy-webpack-plugin": "11.0.0",
    "cross-env": "^7.0.3",
    "css-loader": "6.7.1",
    "eslint": "^7.19.0",
    "eslint-config-prettier": "^8.3.0",
    "eslint-plugin-prettier": "^3.4.0",
    "eslint-plugin-react": "^7.23.2",
    "file-loader": "^6.2.0",
    "mini-css-extract-plugin": "^1.6.0",
    "mocha": "^10.0.0",
    "prettier": "2.3.0",
    "run-script-os": "^1.1.6",
    "@types/shelljs": "^0.8.10",
    "static-site-generator-webpack-plugin": "^3.4.2",
    "style-loader": "^2.0.0",
    "ts-loader": "^8.0.14",
    "typescript": "^4.1.3",
    "url-loader": "^4.1.1",
    "vscode-test": "^1.5.0",
    "webpack": "5.74.0",
    "webpack-cli": "4.10.0"
  },
  "dependencies": {
    "@monaco-editor/react": "4.3.1",
    "@patternfly/patternfly": "4.215.1",
    "@patternfly/react-core": "4.239.0",
    "@patternfly/react-table": "4.108.0",
    "@types/js-yaml": "^4.0.5",
    "@types/uuid": "8.3.4",
    "js-yaml": "^4.1.0",
	"html-to-image": "^1.10.8",
    "path-browserify": "^1.0.1",
    "react": "^17.0.2",
    "react-dom": "^17.0.2",
    "rxjs": "7.5.2",
    "shelljs": "^0.8.5",
    "uuid": "8.3.2"
  }
}