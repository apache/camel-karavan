apiVersion: camel.apache.org/v1
kind: Integration
metadata:
  name: postman.yaml
spec:
  flows:
    - rest:
        post:
          - to: direct:post
        path: parcel
        consumes: application/json
        produces: application/json
    - route:
        from:
          uri: direct:post
          steps:
            - log:
                message: ${body}
            - multicast:
                steps:
                  - kamelet:
                      name: postgresql-sink
                      parameters:
                        serverName: localhost
                        serverPort: '5432'
                        username: postgres
                        password: postgres
                        databaseName: demo
                        query: >-
                          INSERT INTO parcels (id,address) VALUES
                          (:#id,:#address) ON CONFLICT (id)  DO NOTHING
                  - kamelet:
                      name: kafka-not-secured-sink
                      parameters:
                        topic: parcels
                        bootstrapServers: localhost:9092
            - marshal:
                json:
                  library: jackson
        id: post
    - route:
        from:
          uri: kamelet:jms-apache-artemis-source
          steps:
            - to:
                uri: xj:identity
                parameters:
                  transformDirection: XML2JSON
            - kamelet:
                name: kafka-not-secured-sink
                parameters:
                  topic: payment
                  bootstrapServers: localhost:9092
          parameters:
            destinationType: queue
            destinationName: payment
            brokerURL: tcp://localhost:61616
    - route:
        from:
          uri: kamelet:kafka-not-secured-source
          steps:
            - unmarshal:
                json:
                  library: jackson
            - aggregate:
                steps:
                  - choice:
                      when:
                        - expression:
                            simple:
                              expression: ${body.get(1).get("confirmed")}
                          steps:
                            - marshal:
                                json:
                                  library: jackson
                            - kamelet:
                                name: mqtt-sink
                                parameters:
                                  topic: delivery
                                  brokerUrl: tcp://localhost:1883
                      otherwise:
                        steps:
                          - kamelet:
                              name: postgresql-sink
                              parameters:
                                serverName: localhost
                                serverPort: '5432'
                                username: postgres
                                password: postgres
                                databaseName: demo
                                query: >-
                                  UPDATE parcels set status = 'CANCELED' WHERE
                                  id = :#id
                aggregationStrategy: aggregator
                completionSize: 2
                correlationExpression:
                  simple:
                    expression: ${body.get("id")}
          parameters:
            topic: parcel,payment
            bootstrapServers: localhost:9092
            autoCommitEnable: true
            consumerGroup: postman
    - beans:
        - name: aggregator
          type: org.apache.camel.processor.aggregate.GroupedBodyAggregationStrategy
